<?php
$telegram_dir = explode('Modules',__DIR__)[0];
require_once $telegram_dir . "Functions.php";
require_once $telegram_dir . "Offer.php";
require_once $telegram_dir . "Keyboards/DefaultBotKeyboard.php";
require_once $telegram_dir . "Keyboards/InlineOfferBotKeyboard.php";
require_once $telegram_dir . "Keyboards/InlineCountPagesBotKeyboard.php";
require_once "BotModule.php";

class MainBotModule extends BotModule{
	//–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ 1 —Å—Ç—Ä–∞–Ω–∏—Ü–µ
	private $quantity_per_page = 10;
	private $functions;
	public function __construct($main_bot){
		parent::__construct($main_bot);
		$this->functions = new Functions();
	}

	/* –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∏–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π*/
	protected function forMessages($request_info, $whitelist_info){
		$message_text = $this->main_bot->getMessageText($request_info->getMessageData());
		$is_show_offers = true;
		$current_turn_page = $whitelist_info->getTurnPage();
		if(preg_match('/—É–≤–µ–¥–æ–º–ª/',$message_text)){
			if(preg_match('/–ü—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ/', $message_text)){
				$is_show_offers = false;
				$this->switchIsGetEditOffers($whitelist_info, 0);
				$this->main_bot->sendMessage($request_info->getIdTelegram(), "–¢–µ–ø–µ—Ä—å –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å <b>—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã</b>. –ï—Å–ª–∏ –≤—ã —Å–Ω–æ–≤–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"–ü–æ–ª—É—á–∞—Ç—å –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö\".", new DefaultBotKeyboard(false));
			}
			else if(preg_match('/–ü–æ–ª—É—á–∞—Ç—å/', $message_text)){
				$is_show_offers = false;
				$this->switchIsGetEditOffers($whitelist_info, 1);
				$this->main_bot->sendMessage($request_info->getIdTelegram(), "–¢–µ–ø–µ—Ä—å –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å <b>–∏ –Ω–æ–≤—ã–µ, –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã</b>. –ï—Å–ª–∏ –≤—ã —Å–Ω–æ–≤–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"–ü—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö\".", new DefaultBotKeyboard(true));
			}
		}
		else{
			//–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –º–æ–¥—É–ª—å –≤—ã–±–æ—Ä–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π/–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
			if(preg_match('/–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ/', $message_text)){
				$is_show_offers = false;
				//code here
			}
			//–ø–µ—Ä–µ–ª–∏—Å—Ç–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
			else if(preg_match('/^\d+$/', $message_text)){
				$current_turn_page=$message_text;
				$this->turnThePage($whitelist_info, $message_text);
			}
			//–Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–¥—É
			else if(preg_match('/^\d+\/\d+$/', $message_text)){
				$is_show_offers = false;
				//code here
			}
		}
		//–ø–æ–∫–∞–∑ –æ–±—ä–µ–∫—Ç–æ–≤
		if($is_show_offers){
				$this->main_bot->sendMessage($request_info->getIdTelegram(), "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " . $whitelist_info->getUsername() . "!", new DefaultBotKeyboard($whitelist_info->getIsGetEditOffers()));
				$this->showOffersOnPage($current_turn_page, $request_info, $whitelist_info);
				$this->setOffersPress($request_info, $whitelist_info);
			}
			//–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç
			else{
				$this->main_bot->sendMessage($request_info->getIdTelegram(), "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É —Ä–∞–π–æ–Ω—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!", new DefaultBotKeyboard($whitelist_info->getIsGetEditOffers()));
			}
	}
	/* –∫–æ–Ω–µ—Ü –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∏–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π*/
		
	/* –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω –∑–∞–ø—Ä–æ—Å–æ–≤*/
	protected function forCallbacks($request_info, $whitelist_info){
		//–ø–µ—Ä–µ–ª–∏—Å—Ç–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
		if(preg_match('/^\d+$/', $request_info->getCallbackData())){
			$this->turnThePage($whitelist_info, $request_info->getCallbackData());
			$this->showOffersOnPage($request_info->getCallbackData(), $request_info, $whitelist_info);
			$this->setOffersPress($request_info, $whitelist_info);
		}
		//–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω—ã
		else if(preg_match('/^\d+\/\d+$/', $request_info->getCallbackData())){
			$text_title = "–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ–±—ä–µ–∫—Ç–∞";
			//–ø—Ä–æ–≤–µ—Ä–∫–∞, –∏–∑–º–µ–Ω—è–ª—Å—è –ª–∏ —É–∂–µ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
			if(!preg_match("/–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ–±—ä–µ–∫—Ç–∞/", $request_info->getMessageData()->getText())){
				$text_title = "‚ûñ‚ûñ‚ûñ<b>${text_title}</b>‚ûñ‚ûñ‚ûñ";
				$query = "SELECT flat_owners.User_entity_id, flat_owners.Username, flat_owners.Agency , owner_phones.Phonenumber, offers.Entity_id, offers.Image_url, localities.Locality_name, offers.Address, offers.House_number, flat_types.Typename, types.Type_name, flat_owners.IsExclusive FROM flat_owners LEFT JOIN offers USING (User_entity_id) LEFT JOIN owner_phones USING (User_entity_id) LEFT JOIN localities USING (Id_locality) LEFT JOIN flat_types USING (Id_flat_type) LEFT JOIN types USING (Id_type) WHERE offers.Internal_id='" . $request_info->getCallbackData() . "';";
				$result = $this->main_bot->getRequestResult($query);
				if($result){
					$row_check = mysqli_num_rows($result);
					if($row_check > 0){ 
						$inline_offer_keyboard = null;
						$offer = null;
						$text_body = "\n";
						//—Å–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
						for($i = 0; $i < $row_check; $i++){
							$row = mysqli_fetch_row($result);
							
							if($i == 0){
								$is_exclusive = $row[11];
								$id_user = $row[0];
								$username = $row[1];
								$agency = $row[2];
								$id_database = $row[4];
								$image_url = $row[5];
								$city = $row[6];
								$street = $row[7];
								$house_num = $row[8];
								$flat_type = $row[9];
								$offer_type = $row[10];
								
								
								//—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
								$offer = new Offer("", $request_info->getCallbackData(), $id_database, $image_url, $this->functions->getSiteUrl($offer_type, $flat_type), $city, $street, $house_num, $id_user);
								$inline_offer_keyboard = new InlineOfferBotKeyboard($offer, $whitelist_info, false);
								
								//–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç–∫—Å–∫–ª—é–∑–∏–≤—ã
								if($is_exclusive == 1){
									$text_body = "\n–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–∫—Ä—ã—Ç—ã";
									break;
								}
								
								//–ø–∏—à–µ–º –∏–º—è –∞–≥–µ–Ω—Ç–∞
								if(!is_null($username) && $username != ""){
									foreach(preg_split("/;/", $username) as $newname)
										{
											$text_body = $text_body . "üíÅ‚Äç‚ôÇÔ∏è ${newname}\r\n";
										}
								}
								else $text_body = $text_body . "ü§∑ –ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ\r\n";
								//–ø–∏—à–µ–º –∞–≥–µ–Ω—Å—Ç–≤–æ
								if(!is_null($agency) && $agency != "") $text_body = $text_body . "üìé –ê–≥–µ–Ω—Å—Ç–≤–æ ${agency}\r\n";
							}
							//–ø–∏—à–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω—ã
							$phonenumber = $row[3];
							$text_body = $text_body . preg_replace("/(0\d{2})(\d{3})(\d{2})(\d{2})/", "$1 $2 $3 $4", $phonenumber) . "\r\n";
						}
						//—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
						$this->main_bot->editMessage($request_info->getIdTelegram(), $request_info->getMessageData(), $text_title . $text_body, $inline_offer_keyboard);
						if(!is_null($offer)) $this->setPhonesPress($offer, $whitelist_info);
					}
					//–µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ—Ç –≤ –±–∞–∑–µ
					else{
						$this->main_bot->editMessage($request_info->getIdTelegram(), $request_info->getMessageData(), "–î–∞–Ω–Ω—ã–µ –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
					}
					mysqli_free_result($result);
				}
			}
		}
		else{
			$this->main_bot->callAdmin("MainBotModule - Callback - " . $request_info->getCallbackData() . " - " . $whitelist_info->getIdWhitelist() . " " .$whitelist_info->getUsername());
		}
	}
	/* –∫–æ–Ω–µ—Ü –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω –∑–∞–ø—Ä–æ—Å–æ–≤*/
	
	private function showOffersOnPage($current_turn_page, $request_info, $whitelist_info){
		$offers_array = $this->getOffers("WHERE bind_whitelist_distr_flats.Id_whitelist_user=" . $whitelist_info->getIdWhitelist() . " ORDER BY offers.Update_timestamp desc;");
		$count_offers_array = count($offers_array);
		
		//–µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞
		if($count_offers_array > 0){
			//–≤—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
			$total_pages = 1;
			if($count_offers_array > $this->quantity_per_page){
				$total_pages = ceil($count_offers_array / $this->quantity_per_page);
				if($total_pages < 1) $total_pages=1;
			}
			//–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
			if($current_turn_page > $total_pages) $current_turn_page = $total_pages;
			else if ($current_turn_page < 1) $current_turn_page = 1;
			//–≤—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ–º –∞–≥–µ–Ω—Ç—É
			$start_index = ($this->quantity_per_page * ($current_turn_page - 1));
			$end_index = min($start_index + $this->quantity_per_page, $count_offers_array);
			
			//–Ω–∞—á–∞–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
			$this->main_bot->sendMessage($request_info->getIdTelegram(), "–ù–∞—á–∞–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${current_turn_page} –∏–∑ ${total_pages}, " . $this->functions->declOfNum($end_index - $start_index, array('–æ–±—ä–µ–∫—Ç','–æ–±—ä–µ–∫—Ç–∞','–æ–±—ä–µ–∫—Ç–æ–≤')));
			
			//–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è
			for($i = $start_index; $i < $end_index; $i++){
				$inline_offer_keyboard = new InlineOfferBotKeyboard($offers_array[$i], $whitelist_info);
				//–æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				$this->main_bot->sendMessage($request_info->getIdTelegram(), $offers_array[$i]->getOfferDescription());
				//—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
				if(!is_null($offers_array[$i]->getImageUrl()) && $offers_array[$i]->getImageUrl() != ""){
					try{
						$this->main_bot->sendPhoto($request_info->getIdTelegram(), "https://an-gorod-image.com.ua/storage/uploads/preview/" . $offers_array[$i]->getImageUrl(), "<a href='https://angbots.ddns.net/image_ang/some_pic_get.php?entity=" . $offers_array[$i]->getIdOffer() . "'><b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</b></a>");
					}
					catch(Exception $e){
					}
				}
				//–º–µ—Å—Ç–æ –ø–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤—É
				$this->main_bot->sendMessage($request_info->getIdTelegram(), "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ–±—ä–µ–∫—Ç–∞ <b>". $offers_array[$i]->getIdOffer() ."</b>, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–¢–µ–ª–µ—Ñ–æ–Ω—ã' –Ω–∏–∂–µ.", $inline_offer_keyboard, true);
			}
			//–∫–æ–Ω–µ—Ü —Å—Ç—Ä–∞–Ω–∏—Ü—ã
			$inline_count_pages_keyboard = new InlineCountPagesBotKeyboard($current_turn_page, $total_pages);
			
			$end_page_text = "–í—Å–µ–≥–æ " . $this->functions->declOfNum($count_offers_array, array('–æ–±—ä–µ–∫—Ç','–æ–±—ä–µ–∫—Ç–∞','–æ–±—ä–µ–∫—Ç–æ–≤')) . " –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è.";
			if($total_pages > 1) $end_page_text = "–ö–æ–Ω–µ—Ü —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${current_turn_page} –∏–∑ ${total_pages}, " . $this->functions->declOfNum($end_index - $start_index, array('–æ–±—ä–µ–∫—Ç','–æ–±—ä–µ–∫—Ç–∞','–æ–±—ä–µ–∫—Ç–æ–≤')) . "\n\n" . $end_page_text;
			
			$this->main_bot->sendMessage($request_info->getIdTelegram(), $end_page_text, $inline_count_pages_keyboard, true);
		}
	}
	
	private function getOffers($where_query_part){
		$result = $this->main_bot->getRequestResult($this->functions->getSelectAndFromQueryPart() . $where_query_part);
		$offers_array = $this->functions->getOffersFromDBResult($result);
		mysqli_free_result($result);
		return $offers_array;
	}
	
	private function switchIsGetEditOffers($whitelist_info, $value){
		$query = "update white_list set Is_get_edit_offers=${value} where Id_whitelist_user=" . $whitelist_info->getIdWhitelist() . ";";
		$this->main_bot->getRequestResult($query);
	}
	
	private function turnThePage($whitelist_info, $page){
		$query = "update white_list set Turn_page=${page} where Id_whitelist_user=" . $whitelist_info->getIdWhitelist() . ";";
		$this->main_bot->getRequestResult($query);
	}
	
	private function setOffersPress($request_info, $whitelist_info){
		if(!$this->main_bot->checkIsIdAdmin($request_info)){
			$query = "insert into get_offers_press values(" . $whitelist_info->getIdWhitelist() . ", " . time() . ");";
			$this->main_bot->getRequestResult($query);
		}
	}
	
	private function setPhonesPress($offer, $request_info, $whitelist_info){
		if(!$this->main_bot->checkIsIdAdmin($request_info)){
			$query = "insert into agent_phone_press values (" . $whitelist_info->getIdWhitelist() . ", '" . $offer->getIdOffer() . "', " . $offer->getIdDatabase() .  "," . time() . ");";
			$this->main_bot->getRequestResult($query);
		}
	}
}

?>